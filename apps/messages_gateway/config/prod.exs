use Mix.Config

# For production, we often load configuration from external
# sources, such as your system environment. For this reason,
# you won't find the :http configuration below, but set inside
# MessagesGatewayWeb.Endpoint.init/2 when load_from_system_env is
# true. Any dynamic configuration should be done there.
#
# Don't forget to configure the url host to something meaningful,
# Phoenix uses this information when generating URLs.
#
# Finally, we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the mix phx.digest task
# which you typically run after static files are built.
config :messages_gateway, MessagesGatewayWeb.Endpoint,
  load_from_system_env: true,
  http: [:inet6, port: System.get_env("PORT")],
  url: [
    host: {:system, "HOST", "localhost"},
    port: {:system, "PORT", "80"}
  ],
  debug_errors: false,
  code_reloader: false,
  server: true,
  root: "."

config :messages_gateway, MessagesGateway.RedisManager,
       database: "${REDIS_NAME}",
       password: System.get_env("REDIS_PASSWORD"),
       host: "${REDIS_HOST}",
       port: "${REDIS_PORT}",
       pool_size: "${REDIS_POOL_SIZE}"


config :messages_gateway, MessagesGateway.MqManager,
       mq_modul: MessagesGateway.MqManager,
       mq_host:  "${MQ_HOST}",
       mq_port:  "${MQ_PORT}",
       resend_timeout: "${MQ_RESEND_TIMEOUT}",
       mq_queue:  "${MQ_QUEUE}",
       mq_exchange: "${MQ_EXCHANGE}"

config :messages_gateway, MessagesGatewayWeb.KeysController,
       dets_file_name: :mydata_file