use Mix.Config

# For production, we often load configuration from external
# sources, such as your system environment. For this reason,
# you won't find the :http configuration below, but set inside
# MessagesGatewayWeb.Endpoint.init/2 when load_from_system_env is
# true. Any dynamic configuration should be done there.
#
# Don't forget to configure the url host to something meaningful,
# Phoenix uses this information when generating URLs.
#
# Finally, we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the mix phx.digest task
# which you typically run after static files are built.
config :messages_gateway, MessagesGatewayWeb.Endpoint,
  load_from_system_env: true,
  load_from_system_env: true,
  http: [port: {:system, "PORT"}],
  url: [
    host: {:system, "HOST", "localhost"},
    port: {:system, "PORT"}
  ],
  debug_errors: false,
  code_reloader: false

config :messages_gateway, MessagesGateway.RedisManager,
       database: {:system, "REDIS_NAME"},
       password: {:system, "REDIS_PASSWORD"},
       host: {:system, "REDIS_HOST"},
       port: {:system, "REDIS_PORT"},
       pool_size: {:system, "REDIS_POOL_SIZE"}

config :messages_gateway,
       namespace: {:system, "MQ_NAMESPACE"},
       mq_host: {:system, "MQ_HOST"},
       mq_port: {:system, "MQ_PORT"},
       resend_timeout: {:system, "MQ_RESEND_TIMEOUT"}